
from osv import osv
from osv import fields
import time


class product(osv.osv):
	_name = "tiny_purchase.product"
	_columns = {
		'name': fields.char('Name', size=64),
		'price': fields.float('Price'),
	}
product()

class line(osv.osv):
	_name = "tiny_purchase.line"

	def _get_price(self, cr, uid, ids, field_name=None, arg=None, context={}):
		res={}
		lines=self.browse(cr, uid, ids)
		for l in lines:
			if l.product_id:
				res[l.id]=l.quantity * l.product_id.price
			else:
				res[l.id]=0
		return res

	_columns = {
		'name': fields.date('Date'),
		'user_id': fields.many2one('res.users', 'User', required=True),
		'product_id': fields.many2one('tiny_purchase.product', 'Product', required=True),
		'quantity': fields.integer('Quantity'),
		'price': fields.function(_get_price, method=True, string='Price', type='float'),
		'comments': fields.text('Comments'),
	}

	_defaults = {
		'name': lambda *a: time.strftime('%Y-%m-%d'),
		'user_id': lambda self, cr, uid, context: uid,
		'quantity': lambda *a: 0,
	}
line()

